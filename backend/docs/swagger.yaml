definitions:
  models.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      id:
        type: string
      name:
        type: string
    type: object
  models.UserDb:
    properties:
      hash:
        type: string
      id:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/todo:
    post:
      consumes:
      - application/json
      parameters:
      - description: Add Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Add a Todo
      tags:
      - Todo
  /api/v1/todo/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Remove a Todo
      tags:
      - Todo
    get:
      consumes:
      - application/json
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Gets Todo by ID
      tags:
      - Todo
    put:
      consumes:
      - application/json
      parameters:
      - description: Update Todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Update a Todo
      tags:
      - Todo
  /api/v1/todos:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get all Todos
      tags:
      - Todo
  /auth:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Check if authentication is still active
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user found
          schema:
            $ref: '#/definitions/models.UserDb'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Log in with given user
      tags:
      - Authentication
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged out
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Log out
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user created
          schema:
            type: string
      summary: Creates a new User
      tags:
      - Authentication
swagger: "2.0"
